# This suite of tests is in the form of <arrayformula> <offsetrow> <offsetcol> <resultingformula>

# The default case is to map each cell in the area into the formula in turn as an array
[:arithmetic, [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:operator, "*"], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:arithmetic, [:cell, "A1"], [:operator, "*"], [:cell, "B1"]]], [:row, [:arithmetic, [:cell, "A2"], [:operator, "*"], [:cell, "B2"]]]]

[:comparison, [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:operator, ">="], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:comparison, [:cell, "A1"], [:operator, ">="], [:cell, "B1"]]], [:row, [:comparison, [:cell, "A2"], [:operator, ">="], [:cell, "B2"]]]]

[:string_join, [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:string_join, [:cell, "A1"], [:cell, "B1"]]], [:row, [:string_join, [:cell, "A2"], [:cell, "B2"]]]]

# If a function takes no arguments, then leave it be
[:function, "PI"]	1	0	[:function, "PI"]

# If a function accepts arrays as arguments, then leave the argument be
[:function, "AVERAGE", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]	1	0	[:function, "AVERAGE", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]
[:function, "COUNT", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]	1	0	[:function, "COUNT", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]
[:function, "COUNTA", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]	1	0	[:function, "COUNTA", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]
[:function, "MAX", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]	1	0	[:function, "MAX", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]
[:function, "MIN", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]	1	0	[:function, "MIN", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]
[:function, "SUM", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]	1	0	[:function, "SUM", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]
[:function, "SUMPRODUCT", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:function, "SUMPRODUCT", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]

# If the function doesn't accept an array as argument, then map the function to an array
[:function, "ABS", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]	1	0	[:array, [:row, [:function, "ABS", [:cell, "A1"]]], [:row, [:function, "ABS", [:cell, "A2"]]]]
[:function, "CHOOSE", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:function, "CHOOSE", [:cell, "A1"], [:cell, "B1"]]], [:row, [:function, "CHOOSE", [:cell, "A2"], [:cell, "B2"]]]]
[:function, "COSH", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]	1	0	[:array, [:row, [:function, "COSH", [:cell, "A1"]]], [:row, [:function, "COSH", [:cell, "A2"]]]]
[:function, "FIND", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:function, "FIND", [:cell, "A1"], [:cell, "B1"]]], [:row, [:function, "FIND", [:cell, "A2"], [:cell, "B2"]]]]
[:function, "IF", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:function, "IF", [:cell, "A1"], [:cell, "B1"]]], [:row, [:function, "IF", [:cell, "A2"], [:cell, "B2"]]]]
[:function, "IFERROR", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:function, "IFERROR", [:cell, "A1"], [:cell, "B1"]]], [:row, [:function, "IFERROR", [:cell, "A2"], [:cell, "B2"]]]]
[:function, "LEFT", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:function, "LEFT", [:cell, "A1"], [:cell, "B1"]]], [:row, [:function, "LEFT", [:cell, "A2"], [:cell, "B2"]]]]
[:function, "MOD", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:function, "MOD", [:cell, "A1"], [:cell, "B1"]]], [:row, [:function, "MOD", [:cell, "A2"], [:cell, "B2"]]]]
[:function, "PMT", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]],  [:array, [:row, [:cell, "C1"]], [:row, [:cell, "C2"]]]]	1	0	[:array, [:row, [:function, "PMT", [:cell, "A1"], [:cell, "B1"], [:cell, "C1"]]], [:row, [:function, "PMT", [:cell, "A2"], [:cell, "B2"], [:cell, "C2"]]]]
[:function, "ROUND", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:function, "ROUND", [:cell, "A1"], [:cell, "B1"]]], [:row, [:function, "ROUND", [:cell, "A2"], [:cell, "B2"]]]]

# If the function accepts a mixture of arrays and non arrays, then intelligently map the function to an array
# INDEX(array,not_array,[not_array])
[:function, "INDEX", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:function, "INDEX", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:cell, "B1"]]], [:row, [:function, "INDEX", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:cell, "B2"]]]]
[:function, "INDEX", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]], [:array, [:row, [:cell, "C1"]], [:row, [:cell, "C2"]]]]	1	0	[:array, [:row, [:function, "INDEX", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:cell, "B1"], [:cell, "C1"]]], [:row, [:function, "INDEX", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:cell, "B2"], [:cell, "C2"]]]]

# MATCH(not_array,array,[not_array])
[:function, "MATCH", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]	1	0	[:array, [:row, [:function, "MATCH", [:cell, "A1"], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]], [:row, [:function, "MATCH", [:cell, "A2"], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]]]]
[:function, "MATCH", [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]], [:array, [:row, [:cell, "C1"]], [:row, [:cell, "C2"]]]]	1	0	[:array, [:row, [:function, "MATCH", [:cell, "A1"], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]], [:cell, "C1"]]], [:row, [:function, "MATCH", [:cell, "A2"], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]], [:cell, "C2"]]]]

# SUBTOTAL
# SUMIF
# SUMIFS
# VLOOKUP

# Should cope with nesting
[:function, "IF", [:comparison, [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]], [:operator, ">="], [:array, [:row, [:cell, "B1"]], [:row, [:cell, "B2"]]]],  [:array, [:row, [:cell, "A1"]], [:row, [:cell, "A2"]]]]	1	0	[:array, [:row, [:function, "IF", [:comparison, [:cell, "A1"], [:operator, ">="], [:cell, "B1"]], [:cell, "A1"]]], [:row, [:function, "IF", [:comparison, [:cell, "A2"], [:operator, ">="], [:cell, "B2"]], [:cell, "A2"]]]]